1 const palavra_reservada
1 inicio palavra_reservada
2 inteiro palavra_reservada
2 a id
2 = operador
2 k id
2 , delimitador
2 b id
2 = operador
2 2 nro
2 * operador
2 3 nro
2 + operador
2 7 nro
2 * operador
2 5 nro
2 ; delimitador
3 caractere palavra_reservada
3 c id
3 = operador
3 'k' caractere
3 , delimitador
3 b id
3 = operador
3 hehe id
3 ; delimitador
4 real palavra_reservada
4 isRealLife id
4 = operador
4 0 nro
4 ; delimitador
5 cadeia palavra_reservada
5 cadeira id
5 = operador
5 "cadeira" cadeia_de_caracteres
5 , delimitador
5 not id
5 = operador
5 "niet" cadeia_de_caracteres
5 ; delimitador
6 fim palavra_reservada
8 funcao palavra_reservada
8 inteiro palavra_reservada
8 zuera id
8 ( delimitador
8 inteiro palavra_reservada
8 a id
8 , delimitador
8 inteiro palavra_reservada
8 b id
8 , delimitador
8 caractere palavra_reservada
8 c id
8 , delimitador
8 real palavra_reservada
8 k id
8 ) delimitador
8 inicio palavra_reservada
9 var palavra_reservada
9 inicio palavra_reservada
10 inteiro palavra_reservada
10 a id
10 , delimitador
10 b id
10 , delimitador
10 c id
10 ; delimitador
11 real palavra_reservada
11 < operador
11 < operador
11 3 nro
11 , delimitador
11 true id
11 , delimitador
11 3 nro
11 , delimitador
11 true id
11 > operador
11 > operador
11 isolado id
11 ; delimitador
12 fim palavra_reservada
14 b id
14 = operador
14 b id
14 * operador
14 b id
14 - operador
14 c id
14 + operador
14 a id
14 ; delimitador
15 leia palavra_reservada
15 ( delimitador
15 b id
15 ) delimitador
15 ; delimitador
16 leia palavra_reservada
16 ( delimitador
16 c id
16 ) delimitador
16 ; delimitador
17 a id
17 = operador
17 ( delimitador
17 b id
17 + operador
17 c id
17 ) delimitador
17 ; delimitador
18 inicio palavra_reservada
19 a id
19 = operador
19 a id
19 + operador
19 4 nro
19 ; delimitador
20 fim palavra_reservada
21 = operador
21 > operador
21 a id
21 = operador
21 > operador
21 ; delimitador
22 fim palavra_reservada
24 programa palavra_reservada
24 inicio palavra_reservada
25 fim palavra_reservada
Sucesso!